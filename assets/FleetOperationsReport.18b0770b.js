import{_ as R,e as O,ao as X,m as T,f as W,o as Y,k as j,w as S,j as B,n as v,Q as C}from"./index.33e24a60.js";import{Q}from"./QTable.dd64ec4a.js";import{Q as $}from"./QPage.bc7c9ba5.js";import"./QItem.f7dbadf3.js";import"./position-engine.3a0f6838.js";import"./format.865294d5.js";const z=[{name:"asset_name",label:"Asset Name",field:"asset_name"},{name:"driver_name",label:"Driver Name",field:"driver_name"},{name:"mileage_covered",label:"Mileage covered (KM)",field:"mileage_covered"},{name:"engine_runtime",label:"Engine Runtime [HH:mm:ss]",field:"engine_runtime"},{name:"idling_time",label:"Idling Time [HH:mm:ss]",field:"idling_time"},{name:"driving_time",label:"Driving Time [HH:mm:ss]",field:"driving_time"},{name:"parking_time",label:"Parking Time [HH:mm:ss]",field:"parking_time"},{name:"asset_utilization",label:"Asset Utilization [%]",field:"asset_utilization"},{name:"weekend_driving",label:"Weekend Driving",field:"weekend_driving"},{name:"weekend_mileage_covered",label:"Weekend Mileage Covered [Km]",field:"weekend_mileage_covered"},{name:"night_driving",label:"Night Driving",field:"night_driving"},{name:"night_mileage_covered",label:"Night Mileage Covered [Km]",field:"night_mileage_covered"},{name:"early_morning_driving",label:"Early Morning Driving",field:"early_morning_driving"},{name:"early_morning_mileage_covered",label:"Ealy Morning Mileage Covered [Km]",field:"early_morning_mileage_covered"},{name:"geofence_exit",label:"Geofence Exit/Entry",field:"geofence_exit"}],A=O({data(){return{columns:z,rows:[]}},mounted(){let i=X.findIn(this.getReports.activeReports),r=i[i.findIndex(n=>n.title==="Trip report")],d=i[i.findIndex(n=>n.title==="Engine hours report")];if(r&&d){let n=r.sheets[0].sections[0].data,o=d.sheets[0].sections[0].data,m=this.dateDiffInDays(r.from,r.to,"days");for(let e=0;e<n.length;e++){let g=n[e].header,a=n[e].rows[0].object.v;if(n[e].rows.length>1)for(let t=0;t<n[e].rows.length;t++)a=n[e].rows[t].object.v!=="Unidentified driver"?n[e].rows[t].object.v:n[e].rows[0].object.v;let _=n[e].rows[0].length,p=this.formatInHHMMSS(o[0].rows[e].in_movement.v,o[0].rows[e].idle.v),f=(o[0].rows[e].in_movement.raw,o[0].rows[e].idle.raw),u=o[0].rows[e].idle.v,F=o[0].rows[e].in_movement.v,H=n[e].rows[0].idle_duration.v,D=Number(f/(12*60*60*m)*100).toFixed(2),E="NO",w,b,k,y,I=0,M=0,N=0,h=0,x=0,c=0;if(r.sheets.findIndex(t=>t.header===g)>-1){let t=r.sheets[r.sheets.findIndex(l=>l.header===g)].sections[0].data;for(let l=0;l<t.length;l++){if((t[l].header.includes("Sun")||t[l].header.includes("Sat"))&&(I+=parseInt(t[l].header.split(":")[1].trim()),t[l].rows.length>0))for(let s=0;s<t[l].rows.length;s++)M+=t[l].rows[s].length.raw;if(t[l].rows.length>0)for(let s=0;s<t[l].rows.length;s++)(parseInt(t[l].rows[s].from.v.split(":")[0])>19&&parseInt(t[l].rows[s].from.v.split(":")[0])<24||parseInt(t[l].rows[s].to.v.split(":")[0])>20&&parseInt(t[l].rows[s].to.v.split(":")[0])<24)&&(N++,h+=t[l].rows[s].length.raw),(parseInt(t[l].rows[s].from.v.split(":")[0])>=0&&parseInt(t[l].rows[s].from.v.split(":")[0])<6||parseInt(t[l].rows[s].to.v.split(":")[0])>0&&parseInt(t[l].rows[s].to.v.split(":")[0])<6)&&(x++,c+=t[l].rows[s].length.raw)}}w=Number(M).toFixed(2),b=I>0?"YES":"NO",h=Number(h).toFixed(2),k=N>0?"YES":"NO",c=Number(c).toFixed(2),y=x>0?"YES":"NO",this.rows.push({asset_name:g,driver_name:a,mileage_covered:_.v,engine_runtime:p,idling_time:u,driving_time:F,parking_time:H,asset_utilization:D,weekend_driving:b,weekend_mileage_covered:w,night_driving:k,night_mileage_covered:h,early_morning_driving:y,early_morning_mileage_covered:c,geofence_exit:E})}}},computed:{...T("reports",["getReports"])},methods:{...W("reports",["retreiveReport"]),dateDiffInDays(i,r,d){let n=1e3,o=n*60,m=o*60,e=m*24,g=e*7;i=new Date(i),r=new Date(r);let a=r-i;if(isNaN(a))return NaN;switch(d){case"years":return r.getFullYear()-i.getFullYear();case"months":return r.getFullYear()*12+r.getMonth()-(i.getFullYear()*12+i.getMonth());case"weeks":return Math.floor(a/g);case"days":return Math.floor(a/e);case"hours":return Math.floor(a/m);case"minutes":return Math.floor(a/o);case"seconds":return Math.floor(a/n);default:return}},formatInHHMMSS(i,r){let d=parseInt(i.split(":")[2]),n=parseInt(i.split(":")[1]),o=parseInt(i.split(":")[0]),m=parseInt(r.split(":")[2]),e=parseInt(r.split(":")[1]),g=parseInt(r.split(":")[0]),a=0,_=0,p=d+m;p>59&&(p=p%60,a=1);let f=n+e+a;f>59&&(f=f%60,_=1);let u=o+g+_;return Number.isNaN(u)?i:u+":"+f+":"+p},exportTable(){let i=[];for(let o in this.rows){let m=[];for(let e in this.columns)m[this.columns[e].label]=this.rows[o][this.columns[e].field];i.push(m)}let r="Fuel Report.xlsx",d=XLSX.utils.json_to_sheet(i),n=XLSX.utils.book_new();XLSX.utils.book_append_sheet(n,d,"myWorkSheet"),XLSX.writeFile(n,r)}}}),K={class:"full-width q-mt-md",align:"right"};function L(i,r,d,n,o,m){return Y(),j($,{class:"full-screen bg-white"},{default:S(()=>[B("div",K,[v(C,{flat:"",onClick:r[0]||(r[0]=e=>this.$router.push("/home")),icon:"keyboard_arrow_left",class:"text-positive",title:"Back"})]),v(Q,{title:"Fleet Operations Report",rows:i.rows,columns:i.columns,"row-key":"asset_name",class:"sticky-column","rows-per-page-options":[10,20]},{"top-right":S(()=>[v(C,{color:"primary","icon-right":"archive",label:"Export to xls","no-caps":"",onClick:i.exportTable},null,8,["onClick"])]),_:1},8,["rows","columns"])]),_:1})}var Z=R(A,[["render",L]]);export{Z as default};
